# Generated by Django 4.2.23 on 2025-08-30 05:53

from django.db import migrations, models
import django.utils.timezone
import hub.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(default='Статья', max_length=255)),
                ('content', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Audio',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(default='Прослушай аудио', max_length=255)),
                ('audio_url', models.URLField()),
                ('transcript', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='BaseTask',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('order', models.PositiveIntegerField()),
                ('object_id', models.UUIDField()),
                ('size', models.PositiveIntegerField(default=1)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Classroom',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(default='Class', max_length=255)),
                ('invitation_code', models.CharField(default=hub.models.generate_unique_invitation_code, editable=False, max_length=7, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('features', models.JSONField(default=dict)),
            ],
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('student_level', models.CharField(choices=[('starter', 'Starter'), ('elementary', 'Elementary'), ('pre_intermediate', 'Pre-Intermediate'), ('intermediate', 'Intermediate'), ('upper_intermediate', 'Upper-Intermediate'), ('advanced', 'Advanced')], default='starter', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='CoursePdf',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(help_text='Отображаемое название PDF-документа', max_length=255)),
                ('url', models.URLField(blank=True, help_text='Если media.file — внешняя ссылка, можно задавать напрямую', max_length=1000)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'PDF документа курса',
                'verbose_name_plural': 'PDF документы курса',
                'ordering': ['-uploaded_at'],
            },
        ),
        migrations.CreateModel(
            name='Dialogue',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('lines', models.JSONField()),
            ],
        ),
        migrations.CreateModel(
            name='EmbeddedTask',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(default='Выполните интерактивное задание', max_length=255)),
                ('embed_code', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Essay',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.TextField()),
                ('conditions', models.JSONField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='FillInTheBlanks',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(default='Заполните пропуски', max_length=255)),
                ('text', models.TextField()),
                ('display_format', models.CharField(choices=[('withList', 'With list'), ('withoutList', 'Without list')], default='withList', max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Generation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('section_id', models.UUIDField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(default='pending', max_length=20)),
                ('tasks', models.JSONField(default=list)),
            ],
        ),
        migrations.CreateModel(
            name='GenerationStats',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('images', 'Images'), ('audio', 'Audio'), ('text', 'Text'), ('tokens', 'Tokens'), ('functions', 'Functions')], max_length=10)),
                ('successful_generations', models.PositiveIntegerField(default=0)),
                ('unsuccessful_generations', models.PositiveIntegerField(default=0)),
                ('error_text', models.TextField(blank=True, default='', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Homework',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('sent', 'Отправлено'), ('completed', 'На проверке'), ('resent', 'Исправить'), ('checked', 'Проверено')], default='sent', max_length=10, verbose_name='Статус')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата назначения')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Последнее обновление')),
                ('comment', models.TextField(blank=True, null=True, verbose_name='Комментарий учителя')),
            ],
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(default='Изображение', max_length=255)),
                ('image_url', models.URLField(max_length=1000)),
            ],
        ),
        migrations.CreateModel(
            name='LabelImages',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(default='Подпишите картинку', max_length=255)),
                ('images', models.JSONField()),
            ],
        ),
        migrations.CreateModel(
            name='Lesson',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('is_public', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('context', models.JSONField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='LessonGenerationStatus',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('generation_id', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('running', 'Running'), ('finished', 'Finished'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('total_tasks', models.PositiveIntegerField(default=0)),
                ('completed_tasks', models.PositiveIntegerField(default=0)),
                ('percent', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='LessonPublicData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lexical_topics', models.TextField(blank=True, null=True)),
                ('grammar_topics', models.TextField(blank=True, null=True)),
                ('extra_topics', models.TextField(blank=True, null=True)),
                ('meta_description', models.CharField(blank=True, max_length=160, null=True)),
                ('keywords', models.CharField(blank=True, max_length=255, null=True)),
                ('icon', models.CharField(blank=True, max_length=50, null=True, verbose_name='Иконка')),
                ('level', models.CharField(choices=[('A1', 'Beginner'), ('A2', 'Elementary'), ('B1', 'Intermediate'), ('B2', 'Upper-Intermediate'), ('C1', 'Advanced')], default='A1', max_length=2, verbose_name='Уровень')),
                ('link_name', models.SlugField(blank=True, max_length=255, null=True, unique=True, verbose_name='Ссылка')),
            ],
        ),
        migrations.CreateModel(
            name='MakeASentence',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(default='Составьте предложения', max_length=255)),
                ('sentences', models.JSONField()),
            ],
        ),
        migrations.CreateModel(
            name='MatchUpTheWords',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(default='Соотнесите слова с переводами', max_length=255)),
                ('pairs', models.JSONField()),
            ],
        ),
        migrations.CreateModel(
            name='MediaFile',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('file', models.FileField(max_length=1000, upload_to='uploads')),
                ('size', models.PositiveIntegerField(default=0)),
                ('hash', models.CharField(blank=True, max_length=64, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Note',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(default='Заметка', max_length=255)),
                ('content', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Pdf',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(default='Документ PDF', max_length=255)),
                ('pdf_url', models.URLField(default=None, max_length=1000)),
            ],
        ),
        migrations.CreateModel(
            name='SavedUnsplashImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('query', models.CharField(db_index=True, max_length=100)),
                ('url', models.URLField()),
                ('title', models.CharField(blank=True, max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('type', models.CharField(choices=[('completion', 'Закрепление'), ('learning', 'Обучающий'), ('hometask', 'Домашнее задание'), ('revision', 'Повторение')], default='learning', max_length=10)),
                ('order', models.PositiveIntegerField(default=0, help_text='Порядок секции внутри урока')),
            ],
        ),
        migrations.CreateModel(
            name='SiteErrorLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('error_message', models.TextField(help_text='Описание ошибки')),
                ('function_name', models.CharField(help_text='Функция или метод, где произошла ошибка', max_length=255)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, help_text='Время возникновения ошибки')),
            ],
            options={
                'verbose_name': 'Ошибка сайта',
                'verbose_name_plural': 'Ошибки сайта',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SortIntoColumns',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(default='Распределите по колонкам', max_length=255)),
                ('columns', models.JSONField()),
            ],
        ),
        migrations.CreateModel(
            name='Test',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(default='Тест', max_length=255)),
                ('questions', models.JSONField()),
            ],
        ),
        migrations.CreateModel(
            name='TrueOrFalse',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(default='Правда или ложь', max_length=255)),
                ('statements', models.JSONField()),
            ],
        ),
        migrations.CreateModel(
            name='Unscramble',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(default='Составьте слова из букв', max_length=255)),
                ('words', models.JSONField()),
            ],
        ),
        migrations.CreateModel(
            name='UserAnswer',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('answer_data', models.JSONField(default=list)),
                ('correct_answers', models.IntegerField(default=0)),
                ('incorrect_answers', models.IntegerField(default=0)),
                ('max_score', models.IntegerField(default=10)),
                ('submitted_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='UserAutogenerationPreferences',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('task_types_lexical', models.JSONField(default=dict)),
                ('task_types_listening', models.JSONField(default=dict)),
                ('task_types_reading', models.JSONField(default=dict)),
                ('task_types_grammar', models.JSONField(default=dict)),
                ('task_types_speaking', models.JSONField(default=dict)),
                ('task_types_other', models.JSONField(default=dict)),
            ],
        ),
        migrations.CreateModel(
            name='UserContextLength',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('context_length', models.PositiveIntegerField(choices=[(1000, '1000 символов'), (2000, '2000 символов'), (4000, '4000 символов'), (8000, '8000 символов')], default=2000)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='WordList',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(default='Список слов', max_length=255)),
                ('words', models.JSONField()),
            ],
        ),
    ]
